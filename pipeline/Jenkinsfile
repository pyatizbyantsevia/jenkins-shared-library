@Library('jsl')

import mainpackage.git.LocalGitRepository
import mainpackage.api.BitBucketAPI
import mainpackage.api.JenkinsAPI
import mainpackage.GAV
import mainpackage.LogLevel

BitBucketAPI bbAPI
JenkinsAPI jenkinsAPI

pipeline {
    agent any
    options {
        timestamps()
    }
    stages {
        stage('Pipeline init') {
            steps {
                script {
                    Configurator = load 'pipeline/src/groovy/Configurator.groovy'

                    jenkinsAPI = new JenkinsAPI(
                                          params.JENKINS_URL,
                                          "jenkins_cred",
                                          this)

                    sh "git config --global user.email 'SA@test.ru'"
                    sh "git config --global user.name 'ServiceAccount'"
                }
            }
        }
        stage('Job configuration') {
            when {
                expression { !params.isConfigured }
            }
            steps {
                script {
                    Configurator.configureParams()
                    log('Jenkins job configured', LogLevel.NOTICE)
                    throw new org.jenkinsci.plugins.workflow.steps.FlowInterruptedException(hudson.model.Result.NOT_BUILT)
                }
            }
        }
        stage('Working with remote repository / working with Jenkins API') {
            steps {
                script {
                    jenkinsAPI.createFolder('JenkinsFolder')
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
